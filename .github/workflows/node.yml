name: Next.js CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Check build output
        run: |
          if [ -d ".next" ]; then
            echo ".next directory exists"
            ls -la .next
          else
            echo ".next directory does not exist"
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: next-build
          path: |
            .next
            public
            package.json
            package-lock.json
            next.config.mjs

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: next-build

      - name: Verify downloaded artifact
        run: |
          if [ -d ".next" ]; then
            echo ".next directory exists"
            ls -la .next
          else
            echo ".next directory does not exist"
            exit 1
          fi

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SERVER_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Deploy to VPS
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USERNAME }}
        run: |
          rsync -avz --delete .next public package.json package-lock.json next.config.mjs $USER@$HOST:/var/www/html/anaa-developers/client/
          ssh $USER@$HOST << EOF
            cd /var/www/html/anaa-developers/client
            npm ci --only=production
            pm2 restart real-estate-client || pm2 start npm --name "real-estate-client" -- start
          EOF
